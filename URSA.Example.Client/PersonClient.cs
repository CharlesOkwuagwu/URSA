//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a URSA HTTP client proxy generation tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Dynamic;
using URSA.Web.Http;

namespace URSA.Example.WebApplication.Data
{
    public class PersonClient : Client
    {
        public PersonClient(Uri baseUri) : base(baseUri)
        {
        }

        public void Create(URSA.Example.WebApplication.Data.Person person)
        {
            dynamic uriArguments = new ExpandoObject();
            Call(Verb.POST, "/person/#POSTPerson", uriArguments, person);
        }

        public URSA.Example.WebApplication.Data.Person Get(System.Guid id)
        {
            dynamic uriArguments = new ExpandoObject();
            uriArguments.id = id;
            return Call<URSA.Example.WebApplication.Data.Person>(Verb.GET, "/person/id/{?id}", uriArguments);
        }

        public System.Collections.Generic.IEnumerable<URSA.Example.WebApplication.Data.Person> List(System.Object page, System.Object pageSize)
        {
            dynamic uriArguments = new ExpandoObject();
            uriArguments.page = page;
            uriArguments.pageSize = pageSize;
            return Call<System.Collections.Generic.IEnumerable<URSA.Example.WebApplication.Data.Person>>(Verb.GET, "/person?page={?page}&pageSize={?pageSize}", uriArguments);
        }

        public void Delete(System.Guid id)
        {
            dynamic uriArguments = new ExpandoObject();
            uriArguments.id = id;
            Call(Verb.DELETE, "/person/id/{?id}", uriArguments);
        }

        public void Update(System.Guid id, URSA.Example.WebApplication.Data.Person person)
        {
            dynamic uriArguments = new ExpandoObject();
            uriArguments.id = id;
            Call(Verb.PUT, "/person/id/{?id}", uriArguments, person);
        }
    }
}